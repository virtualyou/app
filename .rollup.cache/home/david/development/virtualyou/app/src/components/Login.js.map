{"version":3,"file":"Login.js","sourceRoot":"","sources":["Login.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * VirtualYou\n * @license Apache-2.0\n * @author David L Whitehurst\n */\n\nimport { Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport AuthService from \"../services/auth.service\";\n\ninterface Props {\n    // props would be here\n}\n\ntype State = {\n    redirect: string | null,\n    username: string,\n    password: string,\n    loading: boolean,\n    message: string\n};\n\nexport default class Login extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n\n        this.state = {\n            redirect: null,\n            username: \"\",\n            password: \"\",\n            loading: false,\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        const currentUser = AuthService.getCurrentUser();\n\n        if (currentUser) {\n            this.setState({ redirect: \"/profile\" });\n        }\n    }\n\n    componentWillUnmount() {\n        window.location.reload();\n    }\n\n    validationSchema() {\n        return Yup.object().shape({\n            username: Yup.string().required(\"This field is required!\"),\n            password: Yup.string().required(\"This field is required!\"),\n        });\n    }\n\n    handleLogin(formValue: { username: string; password: string }) {\n        const { username, password } = formValue;\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n\n        AuthService.login(username, password).then(\n            () => {\n                this.setState({\n                    redirect: \"/profile\"\n                });\n            },\n            error => {\n                const resMessage =\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                this.setState({\n                    loading: false,\n                    message: resMessage\n                });\n            }\n        );\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Navigate to={this.state.redirect} />\n        }\n\n        const { loading, message } = this.state;\n\n        const initialValues = {\n            username: \"\",\n            password: \"\",\n        };\n\n        return (\n            <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                    <img\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                        alt=\"profile-img\"\n                        className=\"profile-img-card\"\n                    />\n\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={this.validationSchema}\n                        onSubmit={this.handleLogin}\n                    >\n                        <Form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username</label>\n                                <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                                <ErrorMessage\n                                    name=\"username\"\n                                    component=\"div\"\n                                    className=\"alert alert-danger\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <Field name=\"password\" type=\"password\" className=\"form-control\" />\n                                <ErrorMessage\n                                    name=\"password\"\n                                    component=\"div\"\n                                    className=\"alert alert-danger\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={loading}>\n                                    {loading && (\n                                        <span className=\"spinner-border spinner-border-sm\"></span>\n                                    )}\n                                    <span>Login</span>\n                                </button>\n                            </div>\n\n                            {message && (\n                                <div className=\"form-group\">\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        {message}\n                                    </div>\n                                </div>\n                            )}\n                        </Form>\n                    </Formik>\n                </div>\n            </div>\n        );\n    }\n}"]}