{"version":3,"file":"RegisterAgent.js","sourceRoot":"","sources":["RegisterAgent.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * VirtualYou\n * @license Apache-2.0\n * @author David L Whitehurst\n */\n\nimport { useLocation } from 'react-router-dom';\nimport {keysMatchForAgent} from \"../utility/KeyValidator.ts\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport AuthService from \"../services/auth.service.ts\";\nimport { useState, useEffect } from \"react\";\nimport * as Yup from \"yup\";\n\nconst RegisterAgent = () => {\n    const query = new URLSearchParams(useLocation().search);\n    const dkey = query.get('dkey');\n    const altId = query.get('ownerid');\n    const [ownerId, setOwnerId] = useState(new URLSearchParams(useLocation().search).get('ownerid'));\n    const [successful, setSuccessful] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [decision, setDecision] = useState<boolean | null>(null);\n\n    useEffect(() => {\n        keysMatchForAgent(parseInt(altId || \"0\"), dkey || \"\").then(setDecision);\n    }, []);\n\n    if (!ownerId) {\n        setOwnerId(\"0\");\n    }\n\n    interface Values {\n        username: string,\n        email: string,\n        password: string,\n        idOwner: any\n    }\n\n    const initialValues: Values = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        idOwner: ownerId\n    };\n\n    const validationSchema = () => {\n        return Yup.object().shape({\n            username: Yup.string()\n                .test(\n                    \"len\",\n                    \"The username must be between 3 and 20 characters.\",\n                    (val: any) =>\n                        val &&\n                        val.toString().length >= 3 &&\n                        val.toString().length <= 20\n                )\n                .required(\"This field is required!\"),\n            email: Yup.string()\n                .email(\"This is not a valid email.\")\n                .required(\"This field is required!\"),\n            password: Yup.string()\n                .test(\n                    \"len\",\n                    \"The password must be between 6 and 40 characters.\",\n                    (val: any) =>\n                        val &&\n                        val.toString().length >= 6 &&\n                        val.toString().length <= 40\n                )\n                .required(\"This field is required!\"),\n        });\n    };\n\n    const handleRegister = (formValue: { username: string; email: string; password: string; idOwner: string }) => {\n        const { username, email, password, idOwner } = formValue;\n        setMessage(\"\");\n        setSuccessful(false);\n        AuthService.registerHelper(\n            username,\n            email,\n            password,\n            parseInt(idOwner),\n            \"agent\"\n        ).then(\n            response => {\n                setMessage(response.data.message);\n                setSuccessful(true);\n            },\n            error => {\n                const resMessage =\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                setMessage(resMessage);\n                setSuccessful(false);\n            }\n        );\n    };\n\n    if (decision === null) {\n        return <div>Loading ...</div>\n    }\n\n    if (decision) {\n        return (\n            <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                    <img\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                        alt=\"profile-img\"\n                        className=\"profile-img-card\"\n                    />\n                    <h5>Agent Register</h5>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        onSubmit={handleRegister}\n                    >\n                        <Form>\n                            {!successful && (\n                                <div>\n                                    <div className=\"form-group\">\n                                        <Field type=\"hidden\" name=\"idOwner\" className=\"form-control\"/>\n                                        <label htmlFor=\"username\"> Username </label>\n                                        <Field name=\"username\" type=\"text\" className=\"form-control\"/>\n                                        <ErrorMessage\n                                            name=\"username\"\n                                            component=\"div\"\n                                            className=\"alert alert-danger\"\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"email\"> Email </label>\n                                        <Field name=\"email\" type=\"email\" className=\"form-control\"/>\n                                        <ErrorMessage\n                                            name=\"email\"\n                                            component=\"div\"\n                                            className=\"alert alert-danger\"\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"password\"> Password </label>\n                                        <Field\n                                            name=\"password\"\n                                            type=\"password\"\n                                            className=\"form-control\"\n                                        />\n                                        <ErrorMessage\n                                            name=\"password\"\n                                            component=\"div\"\n                                            className=\"alert alert-danger\"\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n                                    </div>\n                                </div>\n                            )}\n\n                            {message && (\n                                <div className=\"form-group\">\n                                    <div\n                                        className={\n                                            successful ? \"alert alert-success\" : \"alert alert-danger\"\n                                        }\n                                        role=\"alert\"\n                                    >\n                                        {message}\n                                    </div>\n                                </div>\n                            )}\n                        </Form>\n                    </Formik>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                    <img\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                        alt=\"profile-img\"\n                        className=\"profile-img-card\"\n                    />\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                        You are not authorized to register as an Agent.\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default RegisterAgent;\n"]}