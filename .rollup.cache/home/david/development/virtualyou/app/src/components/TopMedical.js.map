{"version":3,"file":"TopMedical.js","sourceRoot":"","sources":["TopMedical.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * VirtualYou\n * @license Apache-2.0\n * @author David L Whitehurst\n */\nimport React, {useEffect, useState} from \"react\";\nimport MedicalService from \"../services/medical.service.ts\";\nimport CreatePrescription from \"../types/createprescription.type.ts\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\nimport PrescriptionDisplay from \"./display/PrescriptionDisplay.tsx\";\nimport AuthService from \"../services/auth.service.ts\";\n\nconst TopMedical = () => {\n    const [prescriptions, setPrescriptions] = useState([]);\n    const [showCreate, setShowCreate] = useState(false);\n\n    // crude refresh\n    function refreshPage() {\n        window.location.reload();\n    }\n\n    // create popup modal\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const formData = new FormData(event.currentTarget);\n        const formPrescriptionValues: CreatePrescription = {\n            name: formData.get('name') as string,\n            identNo: formData.get('identNo') as string,\n            size: formData.get('size') as string,\n            form: formData.get('form') as string,\n            rxUnit: formData.get('rxUnit') as string,\n            quantity: formData.get('quantity') as string,\n            pharmacy: formData.get('pharmacy') as string,\n            pharmacyPhone: formData.get('pharmacyPhone') as string,\n            written: formData.get('written') as string,\n            writtenBy: formData.get('writtenBy') as string,\n            filled: formData.get('filled') as string,\n            expired: formData.get('expired') as string,\n            refillNote: formData.get('refillNote') as string,\n            manufacturedBy: formData.get('manufacturedBy') as string,\n            note: formData.get('note') as string,\n            userKey: parseInt(localStorage.getItem(\"ownerid\") || \"0\")\n        };\n        MedicalService.createPrescription(formPrescriptionValues);\n        handleCreateClose();\n        refreshPage();\n        //goBack();\n    };\n\n    const handleCreateClose = () => {\n        return setShowCreate(false);\n    }\n\n    const showCreatePop = () => {\n        return setShowCreate(true);\n    }\n\n    const openCreate = () => {\n        return showCreatePop();\n    }\n\n    useEffect(() => {\n        MedicalService.getPrescriptions()\n            .then((response) => {\n                setPrescriptions(response.data);\n            })\n    }, [])\n\n    if (!prescriptions) {\n        return <div>Loading...</div>;\n    }\n\n    const user = AuthService.getCurrentUser();\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h1 className=\"display-4\">Medical</h1>\n                <p>This is where we work with our health and medical needs.</p>\n                <h3 className=\"font-weight-light\">Prescriptions\n                    {user.roles.includes((\"ROLE_MONITOR\")) ? <meta/> :\n                        <Button className=\"spacial-button\" variant=\"primary\" onClick={openCreate}>New</Button>}</h3>\n                <Modal show={showCreate} onHide={handleCreateClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Prescription Create</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group controlId=\"form1\">\n                                <Form.Label><b>Name</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter name\" id=\"name\" name=\"name\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form2\">\n                                <Form.Label><b>IdentNo</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter ident no\" id=\"identNo\" name=\"identNo\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form3\">\n                                <Form.Label><b>Size</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter size\" id=\"size\" name=\"size\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form4\">\n                                <Form.Label><b>Form</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter form\" id=\"form\" name=\"form\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form5\">\n                                <Form.Label><b>RxUnit</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Rx unit\" id=\"rxUnit\" name=\"rxUnit\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form6\">\n                                <Form.Label><b>Quantity</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter quantity\" id=\"quantity\" name=\"quantity\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form7\">\n                                <Form.Label><b>Pharmacy</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter pharmacy\" id=\"pharmacy\" name=\"pharmacy\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form8\">\n                                <Form.Label><b>Pharmacy Phone</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter pharmacy phone\" id=\"pharmacyPhone\" name=\"pharmacyPhone\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form9\">\n                                <Form.Label><b>Written</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter when written\" id=\"written\" name=\"written\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form10\">\n                                <Form.Label><b>Written By</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter written by\" id=\"writtenBy\" name=\"writtenBy\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form11\">\n                                <Form.Label><b>Filled</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter when filled\" id=\"filled\" name=\"filled\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form12\">\n                                <Form.Label><b>Expired</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter expiry date\" id=\"expired\" name=\"expired\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form13\">\n                                <Form.Label><b>Refill Note</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter refill note\" id=\"refillNote\" name=\"refillNote\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form14\">\n                                <Form.Label><b>Manufactured By</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter manufactured by\" id=\"manufacturedBy\" name=\"manufacturedBy\"/>\n                            </Form.Group>\n                            <Form.Group controlId=\"form15\">\n                                <Form.Label><b>Note</b></Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter note\" id=\"note\" name=\"note\"/>\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>&nbsp;\n                            <Button variant=\"secondary\" onClick={handleCreateClose}>\n                                Cancel\n                            </Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n                <PrescriptionDisplay data={prescriptions} />\n            </header>\n        </div>\n    );\n};\n\nexport default TopMedical;\n"]}