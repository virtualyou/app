{"version":3,"file":"financial.service.js","sourceRoot":"","sources":["financial.service.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAM1B,MAAM,OAAO,GAAG,2CAA2C,CAAC;AAE5D;;;;;;;;;;;;GAYG;AACH,MAAM,gBAAgB;IAClB;;;;;;OAMG;IACH,SAAS;QACL,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC;IACzC,CAAC;IAED;;;;;;;OAOG;IACH,QAAQ,CAAC,EAAU;QACf,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED;;;;;;;OAOG;IACH,WAAW,CAAC,EAAU;QAClB,OAAO,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC;IAClD,CAAC;IAED;;;;;;;;OAQG;IACH,WAAW,CAAC,EAAU,EAAE,GAAU;QAC9B,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;IACpD,CAAC;IAED;;;;;;;OAOG;IACH,WAAW,CAAC,GAAgB;QACxB,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED;;;;;;OAMG;IACH,QAAQ;QACJ,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;IACxC,CAAC;IAED;;;;;;;OAOG;IACH,OAAO,CAAC,EAAU;QACd,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED;;;;;;;OAOG;IACH,UAAU,CAAC,EAAU;QACjB,OAAO,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC;IACjD,CAAC;IAED;;;;;;;;OAQG;IACH,UAAU,CAAC,EAAU,EAAE,GAAS;QAC5B,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;IACnD,CAAC;IAED;;;;;;;OAOG;IACH,UAAU,CAAC,GAAe;QACtB,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;IAC9C,CAAC;CAEJ;AAED,eAAe,IAAI,gBAAgB,EAAE,CAAC","sourcesContent":["/**\n * VirtualYou\n * @license Apache-2.0\n * @author David L Whitehurst\n */\n\nimport axios from \"axios\";\nimport Asset from \"../types/asset.type.ts\";\nimport Debt from \"../types/debt.type.ts\";\nimport CreateAsset from \"../types/createasset.type.ts\";\nimport CreateDebt from \"../types/createdebt.type.ts\";\n\nconst FIN_URL = \"http://localhost:3000/financial/v1/owner/\";\n\n/**\n * Class: FinancialService\n *\n * @remarks\n * This is a financial service class that communicates with the financial API for its\n * operations using Axios.\n *\n * @example\n * ```\n * const finService = new FinancialService();\n * const myPromise = finService.getAssets();\n * ```\n */\nclass FinancialService {\n    /**\n     * This is a method to get all assets (for a configured owner)\n     *\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    getAssets() {\n        return axios.get(FIN_URL + 'assets');\n    }\n\n    /**\n     * This is a method to get an asset by id (for a configured owner)\n     *\n     * @param id - the primary key for asset needed.\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    getAsset(id: number) {\n        return axios.get(FIN_URL + 'assets/' + id);\n    }\n\n    /**\n     * This is a method to delete an asset by id (for a configured owner)\n     *\n     * @param id - the primary key for asset needed.\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    deleteAsset(id: number) {\n        return axios.delete(FIN_URL + 'assets/' + id);\n    }\n\n    /**\n     * This is a method to update an asset by id (for a configured owner)\n     *\n     * @param id - the primary key for asset needed.\n     * @param obj - Asset type\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    updateAsset(id: number, obj: Asset) {\n        return axios.put(FIN_URL + 'assets/' + id, obj);\n    }\n\n    /**\n     * This is a method to create a new asset (for a configured owner)\n     *\n     * @param obj - Asset type\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    createAsset(obj: CreateAsset) {\n        return axios.post(FIN_URL + 'assets', obj);\n    }\n\n    /**\n     * This is a method to get all debts (for a configured owner)\n     *\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    getDebts() {\n        return axios.get(FIN_URL + 'debts');\n    }\n\n    /**\n     * This is a method to get a debt by id (for a configured owner)\n     *\n     * @param id - the primary key for debt needed.\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    getDebt(id: number) {\n        return axios.get(FIN_URL + 'debts/' + id);\n    }\n\n    /**\n     * This is a method to delete a debt by id (for a configured owner)\n     *\n     * @param id - the primary key for debt needed.\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    deleteDebt(id: number) {\n        return axios.delete(FIN_URL + 'debts/' + id);\n    }\n\n    /**\n     * This is a method to update a debt by id (for a configured owner)\n     *\n     * @param id - the primary key for debt needed.\n     * @param obj - Debt type\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    updateDebt(id: number, obj: Debt) {\n        return axios.put(FIN_URL + 'debts/' + id, obj);\n    }\n\n    /**\n     * This is a method to create a new debt (for a configured owner)\n     *\n     * @param obj - Debt type\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    createDebt(obj: CreateDebt) {\n        return axios.post(FIN_URL + 'debts', obj);\n    }\n\n}\n\nexport default new FinancialService();"]}