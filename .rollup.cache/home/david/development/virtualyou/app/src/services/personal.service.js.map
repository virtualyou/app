{"version":3,"file":"personal.service.js","sourceRoot":"","sources":["personal.service.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,MAAM,YAAY,GAAG,0CAA0C,CAAC;AAEhE;;;;;;;;;;;;GAYG;AACH,MAAM,eAAe;IAEjB;;;;;;OAMG;IACH,QAAQ;QACJ,OAAO,KAAK,CAAC,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;;;OAOG;IACH,OAAO,CAAC,EAAU;QACd,OAAO,KAAK,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC;IACnD,CAAC;IAED;;;;;;;OAOG;IACH,UAAU,CAAC,EAAU;QACjB,OAAO,KAAK,CAAC,MAAM,CAAC,YAAY,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC;IACtD,CAAC;IAED;;;;;;;;OAQG;IACH,UAAU,CAAC,EAAU,EAAE,GAAS;QAC5B,OAAO,KAAK,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;IACxD,CAAC;IAED;;;;;;;OAOG;IACH,UAAU,CAAC,GAAe;QACtB,OAAO,KAAK,CAAC,IAAI,CAAC,YAAY,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;IACnD,CAAC;CAEJ;AAED,eAAe,IAAI,eAAe,EAAE,CAAC","sourcesContent":["/**\n * VirtualYou\n * @license Apache-2.0\n * @author David L Whitehurst\n */\n\nimport axios from \"axios\";\nimport Peep from \"../types/peep.type.ts\";\nimport CreatePeep from \"../types/createpeep.type.ts\";\nconst PERSONAL_URL = \"http://localhost:3000/personal/v1/owner/\";\n\n/**\n * Class: PersonalService\n *\n * @remarks\n * This is a personal service class that communicates with the personal API for its\n * operations using Axios.\n *\n * @example\n * ```\n * const perService = new PersonalService();\n * const myPromise = perService.getPeeps();\n * ```\n */\nclass PersonalService {\n\n    /**\n     * This is a method to get all peeps (key contacts) (for a configured owner)\n     *\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    getPeeps() {\n        return axios.get(PERSONAL_URL + 'peeps');\n    }\n\n    /**\n     * This is a method to get a peep by id (for a configured owner)\n     *\n     * @param id - the primary key for peep needed.\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    getPeep(id: number) {\n        return axios.get(PERSONAL_URL + 'peeps/' + id);\n    }\n\n    /**\n     * This is a method to delete a peep by id (for a configured owner)\n     *\n     * @param id - the primary key for peep needed.\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    deletePeep(id: number) {\n        return axios.delete(PERSONAL_URL + 'peeps/' + id);\n    }\n\n    /**\n     * This is a method to update a peep by id (for a configured owner)\n     *\n     * @param id - the primary key for peep needed.\n     * @param obj - Peep type\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    updatePeep(id: number, obj: Peep) {\n        return axios.put(PERSONAL_URL + 'peeps/' + id, obj);\n    }\n\n    /**\n     * This is a method to create a new peep (for a configured owner)\n     *\n     * @param obj - Peep type\n     * @remarks\n     * using Axios\n     * @returns Promise.\n     */\n    createPeep(obj: CreatePeep) {\n        return axios.post(PERSONAL_URL + 'peeps', obj);\n    }\n\n}\n\nexport default new PersonalService();"]}